# Generated by Django 4.2.18 on 2025-01-27 23:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.CharField(max_length=255, null=True, verbose_name='Create by')),
                ('updated_by', models.CharField(max_length=255, null=True, verbose_name='Update by')),
                ('username', models.CharField(max_length=80, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=80, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=80, verbose_name='Last name')),
                ('mobile', models.CharField(blank=True, max_length=15, verbose_name='Mobile')),
                ('description', models.CharField(blank=True, max_length=120, verbose_name='Description')),
                ('timezone', models.CharField(blank=True, max_length=80, verbose_name='Timezone of User')),
                ('password', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email address')),
                ('profile_picture', models.TextField(blank=True, verbose_name='Profile picture')),
                ('date_of_birth', models.DateTimeField(null=True, verbose_name='Date of birth')),
                ('postalcode', models.CharField(blank=True, max_length=80, verbose_name='Postalcode')),
                ('address', models.CharField(blank=True, max_length=80, verbose_name='Cover photo')),
                ('country', models.CharField(blank=True, max_length=150, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=150, verbose_name='City')),
                ('country_code', models.CharField(blank=True, max_length=6, verbose_name='Country')),
                ('city_code', models.CharField(blank=True, max_length=150, verbose_name='City')),
                ('is_internal_customer', models.BooleanField(default=False, help_text='Customer type.', verbose_name='Internal customer')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
